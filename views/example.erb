        <section class='row-fluid'>
            <a href='/developers'><img src="/core/images/logo.png" alt='ConnectionSphere' /></a>
            <p>Tables.js Library</p>
        </section>

        <br/>

		<section class="container span12">	  
			<section class="box">
				<header>
					<h5>
						<i class="icon-th-list"></i>
						Simple Table
					</h5>
				</header>
				<div class="span6">
					<div id='myTable'></div>
				</div>
				<div class="span5">
					<button class='add btn btn-blue'><i class='icon-plus'></i></button>
					<br/>
					<textarea id='myTableValues' style='width:100%;' rows='10'></textarea>
				</div>
			</section>
		</section>

<script>
	var ctx = document.getElementById('myTable');

	// function to validate URL
	function validUrl(str) {
		var pattern = new RegExp('^(https?:\\/\\/)?'+ // protocol
			'((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|'+ // domain name
			'((\\d{1,3}\\.){3}\\d{1,3}))'+ // OR ip (v4) address
			'(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*'+ // port and path
			'(\\?[;&a-z\\d%_.~+=-]*)?'+ // query string
			'(\\#[-a-z\\d_]*)?$','i'); // fragment locator
		return !!pattern.test(str);
	}

	$(document).ready(function() {
		// draw the table
		tablesJs.draw(ctx, {
			rows: 3,
			class: 'table table-strip-condensed', // Assign a custom value to the class atribute of the table.
			remove_row_button: true, // Add a "remove" button at the right side of each row. This is false by default.
			row_height: '50px', // This value will be added in the CSS heigh attribute of the row (tr).
			header: [
				{
					id: 'url',
					width: '400px', // This value will be added in the CSS width attribute of the column (th).
					text: 'url', // Name of the column, in the header (th).
					type: 'text', // It can be 'text', 'number' or 'list'.
					placeholder: 'write an URL here', // Placeholder attribute of the input field. It is null by default.
					value: '', // Inner text of the cell (th).
					select_all: true, // Select all text on focus. It is false by default. 
				},
				{ id: 'minutes', width: '10px', text: 'minutes', type: 'number', value: 10 },
			],
			on_remove_row: function(rownum) {
				// trace log
				console.log('REMOVE');
				console.log('rownum: '+rownum);
				$('#myTableValues').val( 'REMOVE row ' + rownum.toString() );
			},
			on_edit_cell: function(rownum, colnum, value) {
				// trace log
				console.log('EDITION: '+value);
				console.log('rownum: '+rownum);
				console.log('colnum: '+colnum);
				$('#myTableValues').val( 'EDIT row ' + rownum.toString() + ' col ' + colnum.toString() + ' value ' + value.toString() );

				// if col is 0
				if (colnum == 0) {
					// if the value is a valid URL, set cell color green
					// add validation result to the texteare
					s = value ; //tablesJs.get_value(ctx, rownum, colnum); 
					if (validUrl(s)) {
						tablesJs.set_color(ctx, rownum, colnum, 'green');
						$('#myTableValues').val( $('#myTableValues').val() + ' - VALID URL');
					} else {
						tablesJs.set_color(ctx, rownum, colnum, 'red');
						$('#myTableValues').val( $('#myTableValues').val() + ' - INVALID URL');
					}
				}
			},
		});
		// enable feature to add rows
		$('.add').click(function () {
			// add a row
			tablesJs.add(ctx);
			// set focus on the first cell or the last row
			tablesJs.focus(ctx, tablesJs.count(ctx)-1, 0);
		});
		// set focus
		tablesJs.focus(ctx, 0, 0);
/*
		// get row count
		console.log( tablesJs.count(ctx).toString() );

		// 
		tablesJs.remove(ctx, 0);

		// get row count
		console.log( tablesJs.count(ctx).toString() );

		// get cell value
		console.log( tablesJs.value(ctx, 0, 1).toString() );
*/
	});
</script>


		